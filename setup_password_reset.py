#!/usr/bin/env python3
"""
密码重置功能快速设置脚本
"""

import os
import sys

def create_env_file():
    """创建.env文件"""
    print("🔧 创建环境配置文件...")
    
    if os.path.exists(".env"):
        print("⚠️  .env文件已存在")
        overwrite = input("是否覆盖？(y/N): ").strip().lower()
        if overwrite != 'y':
            print("❌ 取消操作")
            return False
    
    # 获取用户输入
    print("\n📧 请输入邮件服务器配置:")
    smtp_server = input("SMTP服务器 (默认: smtp.gmail.com): ").strip() or "smtp.gmail.com"
    smtp_port = input("SMTP端口 (默认: 587): ").strip() or "587"
    smtp_username = input("邮箱用户名: ").strip()
    smtp_password = input("邮箱密码/应用专用密码: ").strip()
    from_email = input("发件人邮箱 (默认: noreply@pretect-nids.com): ").strip() or "noreply@pretect-nids.com"
    
    if not smtp_username or not smtp_password:
        print("❌ 用户名和密码不能为空")
        return False
    
    # 创建.env文件内容
    env_content = f"""# Email Configuration for Password Reset
# Generated by setup script

# SMTP Server Settings
SMTP_SERVER={smtp_server}
SMTP_PORT={smtp_port}
SMTP_USERNAME={smtp_username}
SMTP_PASSWORD={smtp_password}
FROM_EMAIL={from_email}
"""
    
    # 写入文件
    try:
        with open(".env", "w", encoding="utf-8") as f:
            f.write(env_content)
        print("✅ .env文件创建成功！")
        return True
    except Exception as e:
        print(f"❌ 创建.env文件失败: {e}")
        return False

def create_upload_dirs():
    """创建上传目录"""
    print("\n📁 创建上传目录...")
    
    dirs = ["uploads", "uploads/avatars"]
    
    for dir_path in dirs:
        try:
            os.makedirs(dir_path, exist_ok=True)
            print(f"✅ 创建目录: {dir_path}")
        except Exception as e:
            print(f"❌ 创建目录失败 {dir_path}: {e}")
            return False
    
    return True

def show_next_steps():
    """显示后续步骤"""
    print("\n🎯 设置完成！接下来需要：")
    print("\n1. 测试邮件配置:")
    print("   python test_email.py")
    
    print("\n2. 启动后端服务:")
    print("   cd app")
    print("   python -m uvicorn main:app --reload --host 0.0.0.0 --port 8000")
    
    print("\n3. 启动前端服务:")
    print("   cd dashboard")
    print("   npm run dev")
    
    print("\n4. 访问应用:")
    print("   前端: http://localhost:3000")
    print("   后端: http://localhost:8000")
    
    print("\n💡 提示:")
    print("- 如果使用Gmail，请确保启用了两步验证并生成了应用专用密码")
    print("- 检查防火墙设置，确保端口8000和3000可访问")
    print("- 查看PASSWORD_RESET_SETUP.md获取详细配置说明")

def main():
    """主函数"""
    print("🚀 PreTect-NIDS 密码重置功能设置向导")
    print("=" * 50)
    
    # 检查Python版本
    if sys.version_info < (3, 7):
        print("❌ 需要Python 3.7或更高版本")
        return
    
    # 创建.env文件
    if not create_env_file():
        return
    
    # 创建上传目录
    if not create_upload_dirs():
        return
    
    # 显示后续步骤
    show_next_steps()
    
    print("\n🎉 设置完成！")

if __name__ == "__main__":
    main()
